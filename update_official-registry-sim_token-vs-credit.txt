Update Prompt — official-registry-sim — CREDIT authority hardening

Role: You are the backend/API owner and UI maintainer of the official registry simulator. Apply a “Credit‑only” boundary and make token references explicit, secondary, and read‑only.

Context
This update enforces a crisp separation between **Credits (off‑chain, authoritative)** and **Tokens (on‑chain representations)** across UI, APIs, storage, and logs. Avoid ambiguous terminology. Always render provenance (who is the source of record).

1) Goals
- The Registry is the **source of record** for Credits (issuance, transfer, retirement, certificates).
- Never use token verbs in registry API/UI; expose tokenization only as a linkage to adapter status.
- Every credit artifact (issuance, holdings, certificate) shows an **AuthorityBanner: CREDIT — OFF‑CHAIN**.

2) API & Data
- Add `authority:"credit"` to JSON envelope for all read responses: projects, issuances, credits, retirements, certificates.
- For any objects that may be tokenized, add `tokenization?: {"status":"NOT_REQUESTED"|"REQUESTED"|"MINTED"|"BURNED","chainId"?:number,"contract"?:string,"tokenId"?:string}` read‑only.
- Add `/tokenization` read endpoints:
  • GET `/tokenization/classes/:classId` → adapter mirror (no writes).
  • GET `/tokenization/retirements/:certificateId` → on‑chain burn status (link only).
- Certificates: watermark metadata `{"watermark":"CREDIT — OFF‑CHAIN","issuedBy":"Official Registry (Demo)"}` and return in `/retirements/:certificateId`.

3) UI (if registry comes with UI)
- Header capsule (fixed): “Official Registry • {ENV} • Source of Record: CREDIT” (green theme).
- Provenance pill on all details: `📜 Credit • Class {classId} • Serials {start}–{end}`.
- Tokenization card (read‑only) with CTA “View token representation” → links to explorer token tab.

4) Copy & Vocabulary
- Allowed: “finalize issuance”, “retire credits”, “transfer credits”, “certificate”.
- Disallowed: “mint tokens”, “burn”, “wallet”, “NFT”. Add ESLint content rule or snapshot test to block these terms in UI copy and OpenAPI descriptions.

5) OpenAPI / Docs
- Tag the spec with `x-authority: credit` and add section “Tokenization is representational only; registry remains authoritative.”

6) Observability
- Add structured log field `authority:"credit"`. Mask serial ranges to first+last only in info logs.

7) Tests
- Contract tests ensure no endpoint returns `authority:"token"`.
- Golden snapshot for certificate JSON includes watermark + absence of token verbs.
- Backward compatibility: maintain existing fields; only add new optional ones.

8) Acceptance
- All registry pages show AuthorityBanner (if UI present).
- API responses include `authority:"credit"` and optional `tokenization` link.
- No token verbs in copy/spec; tests enforce it.
